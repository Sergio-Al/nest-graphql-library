# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Author {
  """Example field (placeholder)"""
  id: ID!

  """name of the author"""
  name: String!

  """biography of the author"""
  biography: String

  """birth date of the author"""
  birth_date: DateTime

  """Nationality of the author"""
  nationality: String

  """Date when the author was created"""
  created_at: DateTime!

  """Books of the author"""
  books: [Book!]!
  totalAuthors: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Book {
  """Unique identifier for the book"""
  id: ID!

  """Title of the book"""
  title: String!

  """Author of the book"""
  isbn: String!

  """Description of the book"""
  description: String!

  """Publication year of the book"""
  publication_year: Int!

  """Price of the book"""
  price: Float!

  """Stock of the book"""
  stock: Int!

  """Date when the book was created"""
  created_at: DateTime!

  """Date when the book was last updated"""
  updated_at: DateTime!

  """Authors of the book"""
  authors: [Author!]!
  totalBooks: Float!
}

type User {
  """Unique identifier for the user"""
  id: ID!

  """Email of the user"""
  email: String!

  """First name of the user"""
  first_name: String!

  """Last name of the user"""
  last_name: String!

  """Role of the user"""
  role: [String!]!

  """Date when the user was created"""
  created_at: DateTime!

  """Date when the user was last updated"""
  updated_at: DateTime!
  totalUsers: Float!
}

type Query {
  books: [Book!]!
  book(id: ID!): Book!
  users: [User!]!
  user(id: ID!): User!
  authors: [Author!]!
  author(id: ID!): Author!
}

type Mutation {
  createBook(createBookInput: CreateBookInput!): Book!
  updateBook(updateBookInput: UpdateBookInput!): Book!
  removeBook(id: ID!): Book!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: ID!): User!
  createAuthor(createAuthorInput: CreateAuthorInput!): Author!
  updateAuthor(updateAuthorInput: UpdateAuthorInput!): Author!
  removeAuthor(id: ID!): Author!
}

input CreateBookInput {
  """Title of the book"""
  title: String!

  """Author of the book"""
  isbn: String!

  """Description of the book"""
  description: String!

  """Publication year of the book"""
  publication_year: Int!

  """Price of the book"""
  price: Float!

  """Stock of the book"""
  stock: Int!
}

input UpdateBookInput {
  """Title of the book"""
  title: String

  """Author of the book"""
  isbn: String

  """Description of the book"""
  description: String

  """Publication year of the book"""
  publication_year: Int

  """Price of the book"""
  price: Float

  """Stock of the book"""
  stock: Int
  id: ID!
}

input CreateUserInput {
  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!

  """First name of the user"""
  first_name: String!

  """Last name of the user"""
  last_name: String!
}

input UpdateUserInput {
  """Email of the user"""
  email: String

  """Password of the user"""
  password: String

  """First name of the user"""
  first_name: String

  """Last name of the user"""
  last_name: String
  id: ID!
}

input CreateAuthorInput {
  """name of the author"""
  name: String!

  """biography of the author"""
  biography: String

  """Nationality of the author"""
  nationality: String

  """birth date of the author"""
  birth_date: DateTime
}

input UpdateAuthorInput {
  """name of the author"""
  name: String

  """biography of the author"""
  biography: String

  """Nationality of the author"""
  nationality: String

  """birth date of the author"""
  birth_date: DateTime
  id: ID!
}