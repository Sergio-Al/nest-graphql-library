# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Author {
  """Example field (placeholder)"""
  id: ID!

  """name of the author"""
  name: String!

  """biography of the author"""
  biography: String

  """birth date of the author"""
  birth_date: DateTime

  """Nationality of the author"""
  nationality: String

  """Date when the author was created"""
  created_at: DateTime!

  """Books of the author"""
  books: [Book!]!

  """Total number of authors"""
  totalAuthors: Float!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Category {
  """This is the primary id of the categories entity"""
  id: ID!

  """The name of the category"""
  name: ID!

  """The description of the category"""
  description: String

  """The date the category was created"""
  created_at: DateTime!

  """The books related to the category"""
  books: [Book!]!
}

type Review {
  """Unique identifier for the review"""
  id: ID!

  """Rating of the review"""
  rating: Int!

  """Content of the review"""
  content: String!

  """Flag to indicate if the review is active"""
  deleted: Boolean!

  """Date when the review was created"""
  created_at: DateTime!

  """Date when the review was last updated"""
  updated_at: DateTime!

  """User that created the review"""
  user: User!

  """Book that was reviewed"""
  book: Book!
}

type UserFavorite {
  id: ID!
  user: User!
  book: Book!
  added_at: DateTime!
}

type User {
  """Unique identifier for the user"""
  id: ID!

  """Email of the user"""
  email: String!

  """First name of the user"""
  first_name: String!

  """Last name of the user"""
  last_name: String!

  """
  Available roles:
    • user (default)
    • admin
    • guest
    • super-admin
  
    Users can have multiple roles.
  """
  role: [ValidRoles!]!

  """Date when the user was created"""
  created_at: DateTime!

  """Date when the user was last updated"""
  updated_at: DateTime!

  """List of user favorites"""
  favorites: [UserFavorite!]!

  """List of user reviews"""
  reviews: [Review!]!

  """List of user orders"""
  orders: [Order!]!
  totalUsers: Float!
}

"""Valid user roles"""
enum ValidRoles {
  admin
  user
  guest
  superAdmin
}

type Order {
  """Unique identifier for the order"""
  id: ID!

  """User status"""
  status: String!

  """Total amount of the order"""
  total_amount: Float

  """Date when the order was created"""
  order_date: DateTime!

  """Date when the order was last updated"""
  updated_at: DateTime!

  """User who placed the order"""
  user: User!

  """Flag to determine if the order was deleted"""
  deleted: Boolean!

  """Items in the order"""
  orderItems: [OrderItem!]!
}

type OrderItem {
  """Unique identifier for the order item"""
  id: ID!

  """Quantity of the book"""
  quantity: Int!

  """Unit price of the book"""
  unit_price: Float!

  """Order to which the item belongs"""
  order: Order!

  """Book in the order item"""
  book: Book!
}

type Book {
  """Unique identifier for the book"""
  id: ID!

  """Title of the book"""
  title: String!

  """Author of the book"""
  isbn: String!

  """Description of the book"""
  description: String!

  """Publication year of the book"""
  publication_year: Int!

  """Price of the book"""
  price: Float!

  """Stock of the book"""
  stock: Int!

  """Date when the book was created"""
  created_at: DateTime!

  """Date when the book was last updated"""
  updated_at: DateTime!

  """Authors of the book"""
  authors: [Author!]!

  """Categories of the book"""
  categories: [Category!]!

  """Users who favorited the book"""
  favorited: [UserFavorite!]!

  """Reviews of the book"""
  reviews: [Review!]!

  """Order items of the book"""
  orderItems: [OrderItem!]!

  """Total number of books"""
  totalBooks: Float!
}

type AuthResponse {
  token: String!
  user: User!
}

type Query {
  books: [Book!]!
  book(id: ID!): Book!
  authors: [Author!]!
  author(id: ID!): Author!
  categories: [Category!]!
  category(id: ID!): Category!
  users: [User!]!
  user(id: ID!): User!
  reviews: [Review!]!
  review(id: ID!): Review!
  orders: [Order!]!
  order(id: ID!): Order!
  orderItems: [OrderItem!]!
  orderItem(id: ID!): OrderItem!
  revalidate: AuthResponse!
}

type Mutation {
  """Create a new book, requires a Admin Role"""
  createBook(createBookInput: CreateBookInput!): Book!

  """Update a book, requires a Admin Role"""
  updateBook(updateBookInput: UpdateBookInput!): Book!

  """Remove a book, requires a Admin Role"""
  removeBook(id: ID!): Book!

  """Add authors to a book, requires a Admin Role"""
  addAuthorsToBook(input: AddBookAuthorInput!): Book!

  """Add categories to a book, requires a Admin Role"""
  addCategoriesToBook(input: AddBookCategoryInput!): Book!

  """Create a new author, requires a Admin Role"""
  createAuthor(createAuthorInput: CreateAuthorInput!): Author!

  """Update an author, requires a Admin Role"""
  updateAuthor(updateAuthorInput: UpdateAuthorInput!): Author!

  """Remove an author, requires a Admin Role"""
  removeAuthor(id: ID!): Author!

  """Roles allowed: admin This mutation is used to create a new category"""
  createCategory(createCategoryInput: CreateCategoryInput!): Category!

  """Roles allowed: admin This mutation is used to update a category"""
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!

  """Roles allowed: admin This mutation is used to remove a category"""
  removeCategory(id: ID!): Category!
  createUser(createUserInput: SignupInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!

  """
  Roles allowed: super-admin This mutation is used to update the role of a user
  """
  updateUserRole(updateInput: UpdateRoleInput!): User!
  removeUser(id: ID!): User!

  """Roles allowed: user This mutation is used to add a favorite"""
  addUserFavorite(createUserFavoriteInput: CreateUserFavoriteInput!): UserFavorite!

  """Roles allowed: user This mutation is used to remove a favorite"""
  removeUserFavorite(id: ID!): Boolean!

  """Roles allowed: user This mutation is used to create a new review"""
  createReview(createReviewInput: CreateReviewInput!): Review!

  """Roles allowed: user This mutation is used to update a review"""
  updateReview(updateReviewInput: UpdateReviewInput!): Review!

  """Roles allowed: user This mutation is used to remove a review"""
  removeReview(id: ID!): Review!

  """Roles allowed: user This mutation is used to create a new order"""
  createOrder(createOrderInput: CreateOrderInput!): Order!

  """Roles allowed: user This mutation is used to update an order"""
  updateOrder(updateOrderInput: UpdateOrderInput!): Order!

  """Roles allowed: user This mutation is used to remove an order"""
  removeOrder(id: ID!): Order!

  """Roles allowed: user This mutation is used to create a new order item"""
  createOrderItem(createOrderItemInput: CreateOrderItemInput!): OrderItem!

  """Roles allowed: user This mutation is used to update an order item"""
  updateOrderItem(updateOrderItemInput: UpdateOrderItemInput!): OrderItem!

  """Roles allowed: user This mutation is used to remove an order item"""
  removeOrderItem(id: ID!): OrderItem!
  signup(signupInput: SignupInput!): AuthResponse!
  login(loginInput: LoginInput!): AuthResponse!
}

input CreateBookInput {
  """Title of the book"""
  title: String!

  """Author of the book"""
  isbn: String!

  """Description of the book"""
  description: String!

  """Publication year of the book"""
  publication_year: Int!

  """Price of the book"""
  price: Float!

  """Stock of the book"""
  stock: Int!
}

input UpdateBookInput {
  """Title of the book"""
  title: String

  """Author of the book"""
  isbn: String

  """Description of the book"""
  description: String

  """Publication year of the book"""
  publication_year: Int

  """Price of the book"""
  price: Float

  """Stock of the book"""
  stock: Int
  id: ID!
}

input AddBookAuthorInput {
  """The id of the book"""
  bookId: ID!

  """The id of the author"""
  authorIds: [ID!]!
}

input AddBookCategoryInput {
  """The id of the book"""
  bookId: ID!

  """The id of the category"""
  categoryIds: [ID!]!
}

input CreateAuthorInput {
  """name of the author"""
  name: String!

  """biography of the author"""
  biography: String

  """Nationality of the author"""
  nationality: String

  """birth date of the author"""
  birth_date: DateTime
}

input UpdateAuthorInput {
  """name of the author"""
  name: String

  """biography of the author"""
  biography: String

  """Nationality of the author"""
  nationality: String

  """birth date of the author"""
  birth_date: DateTime
  id: ID!
}

input CreateCategoryInput {
  """The name of the category"""
  name: String!

  """The description of the category"""
  description: String
}

input UpdateCategoryInput {
  """The name of the category"""
  name: String

  """The description of the category"""
  description: String
  id: ID!
}

input SignupInput {
  email: String!

  """Password of the user"""
  password: String!

  """First name of the user"""
  first_name: String!

  """Last name of the user"""
  last_name: String!
}

input UpdateUserInput {
  """Email of the user"""
  email: String

  """Password of the user"""
  password: String

  """First name of the user"""
  first_name: String

  """Last name of the user"""
  last_name: String
  id: ID!
}

input UpdateRoleInput {
  id: ID!
  roles: [ValidRoles!]!
}

input CreateUserFavoriteInput {
  userId: ID!
  bookId: ID!
}

input CreateReviewInput {
  """Rating of the review"""
  rating: Int!

  """Content of the review"""
  content: String!

  """User that created the review"""
  userId: ID!

  """Book that is being reviewed"""
  bookId: ID!
}

input UpdateReviewInput {
  """Rating of the review"""
  rating: Int

  """Content of the review"""
  content: String

  """User that created the review"""
  userId: ID

  """Book that is being reviewed"""
  bookId: ID
  id: ID!
}

input CreateOrderInput {
  """User status"""
  status: ValidStatuses!

  """Total amount of the order"""
  total_amount: Float = 0

  """User who placed the order"""
  userId: String!
}

"""Valid order statuses"""
enum ValidStatuses {
  PENDING
  COMPLETED
  CANCELLED
}

input UpdateOrderInput {
  """User status"""
  status: ValidStatuses

  """Total amount of the order"""
  total_amount: Float = 0

  """User who placed the order"""
  userId: String
  id: ID!
}

input CreateOrderItemInput {
  """Quantity of the book"""
  quantity: Int!

  """Unit price of the book"""
  unit_price: Float

  """Order to which the item belongs"""
  order_id: ID!

  """Book in the order item"""
  book_id: ID!
}

input UpdateOrderItemInput {
  """Quantity of the book"""
  quantity: Int

  """Unit price of the book"""
  unit_price: Float

  """Order to which the item belongs"""
  order_id: ID

  """Book in the order item"""
  book_id: ID
  id: ID!
}

input LoginInput {
  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!
}